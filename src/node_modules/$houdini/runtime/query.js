"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// externals
var store_1 = require("svelte/store");
var svelte_1 = require("svelte");
// locals
var runtime_1 = require("./runtime");
function query(document) {
    // make sure we got a query document
    if (document.kind !== 'HoudiniQuery') {
        throw new Error('getQuery can only take query operations');
    }
    // if there is no initial value
    if (!document.initialValue) {
        console.log('no initial value');
        // we're done
        return store_1.readable(null, function () { });
    }
    console.log('past!');
    // wrap the result in a store we can use to keep this query up to date
    var value = store_1.readable(document.processResult(document.initialValue.data, document.variables), function (set) {
        // build up the store object
        var store = {
            name: document.name,
            updateValue: function (val, variables) {
                set(document.processResult(val, variables));
                store.variables = variables;
            },
            currentValue: {},
            variables: document.variables,
        };
        // when the component monuts
        svelte_1.onMount(function () {
            // register the updater for the query
            runtime_1.registerDocumentStore(store);
            // keep the stores' values in sync
            value.subscribe(function (val) {
                store.currentValue = val;
            });
        });
        // the function used to clean up the store
        return function () {
            runtime_1.unregisterDocumentStore(store);
        };
    });
    return value;
}
exports.default = query;
